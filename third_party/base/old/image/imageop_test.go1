package main

import (
    "testing"
)

var (
    parameters = map[string]string {
        "username" : "test@qbox.net",
        "password" : "test",
        "rsHost"   : "http://rs.qbox.me:10100",
        "accHost"  : "https://acc.qbox.me",
        "ucHost"   : "http://uc.qbox.me",
        "ioHost"   : "http://io.qbox.me",
        "clientID" : "abcd0c7edcdf914228ed8aa7c6cee2f2bc6155e2",
        "clientSecret" : "fc9ef8b171a74e197b17f85ba23799860ddf3b9c",
        "redirectURI"  : "<RedirectURL>",
        "authorizationEndpoint" : "<AuthURL>",
        "publishURI" : "http://io.qbox.me",
        "tableName" : "ikbear2",
        "sleepTime" : "6",
    }
)

func checkout() {
    Prepare(parameters)
}

func testImageFramework(t *testing.T, cases []Case) {
    once.Do(checkout)
	for _, imgs := range cases {
		width, height := GetImageWidthHeight(parameters, imgs.img, imgs.style)
		if imgs.expectedWidth != -1 {
			if width != imgs.expectedWidth {
				t.Log("Image:", imgs.img, "Unexpected Width:", width)
				t.Fail()
			}
		}
		if imgs.expectedHeight != -1 {
			if height != imgs.expectedHeight {
				t.Log("Image:", imgs.img, "Unexpected Height:", height)
				t.Fail()
			}
		}
	}
}

func TestCase_0(t *testing.T) {
	cases := []Case{
		{"email", "0", 160, 21},
		{"finger", "0", 498, 330},
		{"girl", "0", 399, 599},
		{"iphone", "0", -1, 600},
		{"sketch", "0", -1, 600},
	}
	testImageFramework(t, cases)
}

func TestCase_1(t *testing.T) {
	cases := []Case{
		{"email", "1", 128, -1},
		{"finger", "1", 128, -1},
		{"girl", "1", 128, -1},
		{"iphone", "1", 128, -1},
		{"sketch", "1", 128, -1},

		{"finger", "1", -1, 128},
		{"girl", "1", -1, 128},
		{"iphone", "1", -1, 128},
		{"sketch", "1", -1, 128},
	}
	testImageFramework(t, cases)
}

func TestCase_10(t *testing.T) {
	cases := []Case{
		{"email", "10", 150, -1},
		{"finger", "10", 150, 150},
		{"girl", "10", 150, 150},
		{"iphone", "10", 150, 150},
		{"sketch", "10", 150, 150},
	}
	testImageFramework(t, cases)
}

func TestCase_21(t *testing.T) {
	cases := []Case{
		{"email", "21", 160, 21},
		{"finger", "21", 498, 330},
		{"girl", "21", 399, 599},
		{"iphone", "21", 640, 640},
		{"sketch", "21", -1, 640},
	}
	testImageFramework(t, cases)
}

func TestCase_22(t *testing.T) {
	cases := []Case{
		{"email", "22", 160, 21},
		{"finger", "22", 498, 330},
		{"girl", "22", 399, 599},
		{"iphone", "22", 640, -1},
		{"sketch", "22", 600, 800},
	}
	testImageFramework(t, cases)
}

func TestCase_23(t *testing.T) {
	cases := []Case{
		{"email", "23", 160, 21},
		{"finger", "23", 320, -1},
		{"girl", "23", 320, -1},
		{"iphone", "23", 320, -1},
		{"sketch", "23", 320, -1},
	}
	testImageFramework(t, cases)
}

func TestCase_24(t *testing.T) {
	cases := []Case{
		{"email", "24", 160, 21},
		{"finger", "24", 498, 330},
		{"girl", "24", 399, 599},
		{"iphone", "24", -1, 640},
		{"sketch", "24", -1, 640},
	}
	testImageFramework(t, cases)
}

func TestCase_25(t *testing.T) {
	cases := []Case{
		{"email", "25", 150, -1},
		{"finger", "25", 150, 150},
		{"girl", "25", 150, 150},
		{"iphone", "25", 150, 150},
		{"sketch", "25", 150, 150},
	}
	testImageFramework(t, cases)
}

func TestCase_50(t *testing.T) {
	cases := []Case{
		{"email", "50", 60, -1},
		{"finger", "50", 60, 40},
		{"girl", "50", 60, 40},
		{"iphone", "50", 60, 40},
		{"sketch", "50", 60, 40},
	}
	testImageFramework(t, cases)
}

func TestCase_Small(t *testing.T) {
	cases := []Case{
		{"email", "small", 160, 21},
		{"finger", "small", 128, 128},
		{"girl", "small", 128, 128},
		{"iphone", "small", 128, 128},
		{"sketch", "small", 128, 128},
	}
	testImageFramework(t, cases)
}

func TestCase_Medium(t *testing.T) {
	cases := []Case{
		{"email", "medium", 160, 21},
		{"finger", "medium", 400, 300},
		{"girl", "medium", 399, 599},
		{"iphone", "medium", 400, 300},
		{"sketch", "medium", 400, 300},
	}
	testImageFramework(t, cases)
}

func TestCase_Xlarge(t *testing.T) {
	cases := []Case{
		{"email", "xlarge", 160, 21},
		{"finger", "xlarge", 498, 330},
		{"girl", "xlarge", 399, 599},
		{"iphone", "xlarge", 640, 960},
		{"sketch", "xlarge", 600, 800},
	}
	testImageFramework(t, cases)
}

func TestCase_Ylarge(t *testing.T) {
	cases := []Case{
		{"email", "ylarge", 160, 21},
		{"finger", "ylarge", 498, 330},
		{"girl", "ylarge", 399, 599},
		{"iphone", "ylarge", -1, 600},
		{"sketch", "ylarge", -1, 600},
	}
	testImageFramework(t, cases)
}

