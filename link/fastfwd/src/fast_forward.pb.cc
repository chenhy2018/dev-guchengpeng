// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: fast_forward.proto

#include "fast_forward.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace fastforward {
class FastForwardInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FastForwardInfo>
      _instance;
} _FastForwardInfo_default_instance_;
class FastForwardStreamDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FastForwardStream>
      _instance;
} _FastForwardStream_default_instance_;
}  // namespace fastforward
namespace protobuf_fast_5fforward_2eproto {
void InitDefaultsFastForwardInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::fastforward::_FastForwardInfo_default_instance_;
    new (ptr) ::fastforward::FastForwardInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fastforward::FastForwardInfo::InitAsDefaultInstance();
}

void InitDefaultsFastForwardInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFastForwardInfoImpl);
}

void InitDefaultsFastForwardStreamImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::fastforward::_FastForwardStream_default_instance_;
    new (ptr) ::fastforward::FastForwardStream();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fastforward::FastForwardStream::InitAsDefaultInstance();
}

void InitDefaultsFastForwardStream() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFastForwardStreamImpl);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fastforward::FastForwardInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fastforward::FastForwardInfo, url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fastforward::FastForwardInfo, speed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fastforward::FastForwardInfo, fmt_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fastforward::FastForwardStream, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fastforward::FastForwardStream, stream_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::fastforward::FastForwardInfo)},
  { 8, -1, sizeof(::fastforward::FastForwardStream)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::fastforward::_FastForwardInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fastforward::_FastForwardStream_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "fast_forward.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022fast_forward.proto\022\013fastforward\":\n\017Fas"
      "tForwardInfo\022\013\n\003url\030\001 \001(\t\022\r\n\005speed\030\002 \001(\005"
      "\022\013\n\003fmt\030\003 \001(\t\"#\n\021FastForwardStream\022\016\n\006st"
      "ream\030\001 \001(\0142^\n\013FastForward\022O\n\013GetTsStream"
      "\022\034.fastforward.FastForwardInfo\032\036.fastfor"
      "ward.FastForwardStream\"\0000\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 234);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "fast_forward.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_fast_5fforward_2eproto
namespace fastforward {

// ===================================================================

void FastForwardInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FastForwardInfo::kUrlFieldNumber;
const int FastForwardInfo::kSpeedFieldNumber;
const int FastForwardInfo::kFmtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FastForwardInfo::FastForwardInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_fast_5fforward_2eproto::InitDefaultsFastForwardInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fastforward.FastForwardInfo)
}
FastForwardInfo::FastForwardInfo(const FastForwardInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.url().size() > 0) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  fmt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.fmt().size() > 0) {
    fmt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fmt_);
  }
  speed_ = from.speed_;
  // @@protoc_insertion_point(copy_constructor:fastforward.FastForwardInfo)
}

void FastForwardInfo::SharedCtor() {
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fmt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  speed_ = 0;
  _cached_size_ = 0;
}

FastForwardInfo::~FastForwardInfo() {
  // @@protoc_insertion_point(destructor:fastforward.FastForwardInfo)
  SharedDtor();
}

void FastForwardInfo::SharedDtor() {
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fmt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FastForwardInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FastForwardInfo::descriptor() {
  ::protobuf_fast_5fforward_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fast_5fforward_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FastForwardInfo& FastForwardInfo::default_instance() {
  ::protobuf_fast_5fforward_2eproto::InitDefaultsFastForwardInfo();
  return *internal_default_instance();
}

FastForwardInfo* FastForwardInfo::New(::google::protobuf::Arena* arena) const {
  FastForwardInfo* n = new FastForwardInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FastForwardInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:fastforward.FastForwardInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fmt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  speed_ = 0;
  _internal_metadata_.Clear();
}

bool FastForwardInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fastforward.FastForwardInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string url = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->url().data(), static_cast<int>(this->url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "fastforward.FastForwardInfo.url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 speed = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string fmt = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fmt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fmt().data(), static_cast<int>(this->fmt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "fastforward.FastForwardInfo.fmt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fastforward.FastForwardInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fastforward.FastForwardInfo)
  return false;
#undef DO_
}

void FastForwardInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fastforward.FastForwardInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string url = 1;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "fastforward.FastForwardInfo.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->url(), output);
  }

  // int32 speed = 2;
  if (this->speed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->speed(), output);
  }

  // string fmt = 3;
  if (this->fmt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fmt().data(), static_cast<int>(this->fmt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "fastforward.FastForwardInfo.fmt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->fmt(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:fastforward.FastForwardInfo)
}

::google::protobuf::uint8* FastForwardInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fastforward.FastForwardInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string url = 1;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "fastforward.FastForwardInfo.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->url(), target);
  }

  // int32 speed = 2;
  if (this->speed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->speed(), target);
  }

  // string fmt = 3;
  if (this->fmt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fmt().data(), static_cast<int>(this->fmt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "fastforward.FastForwardInfo.fmt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->fmt(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fastforward.FastForwardInfo)
  return target;
}

size_t FastForwardInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fastforward.FastForwardInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string url = 1;
  if (this->url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url());
  }

  // string fmt = 3;
  if (this->fmt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fmt());
  }

  // int32 speed = 2;
  if (this->speed() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->speed());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FastForwardInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fastforward.FastForwardInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const FastForwardInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FastForwardInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fastforward.FastForwardInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fastforward.FastForwardInfo)
    MergeFrom(*source);
  }
}

void FastForwardInfo::MergeFrom(const FastForwardInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fastforward.FastForwardInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.url().size() > 0) {

    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  if (from.fmt().size() > 0) {

    fmt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fmt_);
  }
  if (from.speed() != 0) {
    set_speed(from.speed());
  }
}

void FastForwardInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fastforward.FastForwardInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FastForwardInfo::CopyFrom(const FastForwardInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fastforward.FastForwardInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FastForwardInfo::IsInitialized() const {
  return true;
}

void FastForwardInfo::Swap(FastForwardInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FastForwardInfo::InternalSwap(FastForwardInfo* other) {
  using std::swap;
  url_.Swap(&other->url_);
  fmt_.Swap(&other->fmt_);
  swap(speed_, other->speed_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FastForwardInfo::GetMetadata() const {
  protobuf_fast_5fforward_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fast_5fforward_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FastForwardStream::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FastForwardStream::kStreamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FastForwardStream::FastForwardStream()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_fast_5fforward_2eproto::InitDefaultsFastForwardStream();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fastforward.FastForwardStream)
}
FastForwardStream::FastForwardStream(const FastForwardStream& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  stream_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.stream().size() > 0) {
    stream_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stream_);
  }
  // @@protoc_insertion_point(copy_constructor:fastforward.FastForwardStream)
}

void FastForwardStream::SharedCtor() {
  stream_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

FastForwardStream::~FastForwardStream() {
  // @@protoc_insertion_point(destructor:fastforward.FastForwardStream)
  SharedDtor();
}

void FastForwardStream::SharedDtor() {
  stream_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FastForwardStream::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FastForwardStream::descriptor() {
  ::protobuf_fast_5fforward_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fast_5fforward_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FastForwardStream& FastForwardStream::default_instance() {
  ::protobuf_fast_5fforward_2eproto::InitDefaultsFastForwardStream();
  return *internal_default_instance();
}

FastForwardStream* FastForwardStream::New(::google::protobuf::Arena* arena) const {
  FastForwardStream* n = new FastForwardStream;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FastForwardStream::Clear() {
// @@protoc_insertion_point(message_clear_start:fastforward.FastForwardStream)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stream_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool FastForwardStream::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fastforward.FastForwardStream)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes stream = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_stream()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fastforward.FastForwardStream)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fastforward.FastForwardStream)
  return false;
#undef DO_
}

void FastForwardStream::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fastforward.FastForwardStream)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes stream = 1;
  if (this->stream().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->stream(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:fastforward.FastForwardStream)
}

::google::protobuf::uint8* FastForwardStream::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fastforward.FastForwardStream)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes stream = 1;
  if (this->stream().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->stream(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fastforward.FastForwardStream)
  return target;
}

size_t FastForwardStream::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fastforward.FastForwardStream)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes stream = 1;
  if (this->stream().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->stream());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FastForwardStream::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fastforward.FastForwardStream)
  GOOGLE_DCHECK_NE(&from, this);
  const FastForwardStream* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FastForwardStream>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fastforward.FastForwardStream)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fastforward.FastForwardStream)
    MergeFrom(*source);
  }
}

void FastForwardStream::MergeFrom(const FastForwardStream& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fastforward.FastForwardStream)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.stream().size() > 0) {

    stream_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stream_);
  }
}

void FastForwardStream::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fastforward.FastForwardStream)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FastForwardStream::CopyFrom(const FastForwardStream& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fastforward.FastForwardStream)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FastForwardStream::IsInitialized() const {
  return true;
}

void FastForwardStream::Swap(FastForwardStream* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FastForwardStream::InternalSwap(FastForwardStream* other) {
  using std::swap;
  stream_.Swap(&other->stream_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FastForwardStream::GetMetadata() const {
  protobuf_fast_5fforward_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fast_5fforward_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace fastforward

// @@protoc_insertion_point(global_scope)
