sdk demo - 基于七牛流媒体推流sdk的一个demo
控制台参数：
-t,--print-time 在控制台打印的日志是否加入时间戳
-a,--account  指定用户账户,在注册账户到sip服务器的时候要用到，例如1001,1002
-p,--passwd 指定账户密码,
-h,--host 指定sip服务器的地址，例如：39.107.247.14
-l,--logfile 指定重定向日志输出的文件，指定这个参数后，日志不再输出到控制台，例如：/tmp/sdk_demo.log
-s,--start-socket-server 启动socket服务器服务，用户可以通过网络去远程操作sdk demo，暂未实现,类似非常简单的ssh
注意：以上参数均是可选参数,account,passwd,host等，不指定会有提供默认值.目前只支持嵌入式的mstar平台

dmeo启动之后，会等待远程的呼叫，呼叫成功之后，会启动推流，将一帧帧的从摄像头采集到的图像，
发送到主叫方。

demo启动之后，这时敲回车，会出现命令提示符：
sdk_demo >
出现这个命令提示符，可以对demo进行操作，支持的命令如下：
quit - 退出应用程序
help - 显示帮助信息
start-socket-server - 启动网络服务器
start-stream - 调试模式，手动启动推流，这时候不需要远程去呼叫，主要为了内部测试，正常是远程呼叫并流媒体协商成功才开始推流
stop-stream - 调试模式，手动停止推流
dump - 打印当前流的一些信息，比如总共发送了多少帧，比特率是多少，总共发送了多少字节等
log-open-file - 控制台日志重定向到文件，暂未实现，待完善
log-close-file - 停止输出日志到文件，切换到控制台
dbg-reset - 恢复一些调试信息到默认值，比如总共发送了多少帧数据，总共发送了多少字节等
video-threshold - 日志会每隔多少个帧就会打印一下当前发送了多少帧数据，主要为了确定推流是否还在继续，这个参数用来具体设置每隔多少个帧打印一次

文件说明：
command.c - 运行时接受用户输入的命令，用户可以与demo交互
h264_parse.c - h264码流解析
stream.c - 将网络摄像机采集到的图像通过网络打包成rtp包发到主叫方
dbg.c - 日志和一些调试函数
aj_ipc.c - 安佳IPC的初始化，设置视音频捕获格式，注册回调等
dev_core.c - 网络ipc抽象层，某一个具体的ipc厂商需要将自己的设备注册到core，才会使能
dev_config.h - 具体的网络ipc厂商需要将自己的设备在这个头文件里面注册，core才会知道具体要用哪个ipc设备
main.c - 设置控制台参数，初始化推流sdk，等待用户发起sip 呼叫
common.h - 定义一些工具宏或者通用的类型，比如uint32_t

新的网络摄像机的加入：
1.新建一个.c,比如 xxx_dev.c
2.定义一个CaptureDevice 结构体变量，比如xxx_device,填充它里面的成员，主要是init和DeInit
3.将xxx_device加入到dev_config.h, DEV_CORE_CAPTURE_DEVICE_ENTRY( xxx_device )
4.Makefile加入平台的工具链

