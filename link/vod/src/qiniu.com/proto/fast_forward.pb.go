// Code generated by protoc-gen-go. DO NOT EDIT.
// source: fast_forward.proto

package fastforward

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type FastForwardInfo struct {
	Url                  string   `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Speed                int32    `protobuf:"varint,2,opt,name=speed,proto3" json:"speed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FastForwardInfo) Reset()         { *m = FastForwardInfo{} }
func (m *FastForwardInfo) String() string { return proto.CompactTextString(m) }
func (*FastForwardInfo) ProtoMessage()    {}
func (*FastForwardInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_fast_forward_238e70c8a211cb9e, []int{0}
}
func (m *FastForwardInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FastForwardInfo.Unmarshal(m, b)
}
func (m *FastForwardInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FastForwardInfo.Marshal(b, m, deterministic)
}
func (dst *FastForwardInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FastForwardInfo.Merge(dst, src)
}
func (m *FastForwardInfo) XXX_Size() int {
	return xxx_messageInfo_FastForwardInfo.Size(m)
}
func (m *FastForwardInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_FastForwardInfo.DiscardUnknown(m)
}

var xxx_messageInfo_FastForwardInfo proto.InternalMessageInfo

func (m *FastForwardInfo) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *FastForwardInfo) GetSpeed() int32 {
	if m != nil {
		return m.Speed
	}
	return 0
}

type FastForwardStream struct {
	Stream               []byte   `protobuf:"bytes,1,opt,name=stream,proto3" json:"stream,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FastForwardStream) Reset()         { *m = FastForwardStream{} }
func (m *FastForwardStream) String() string { return proto.CompactTextString(m) }
func (*FastForwardStream) ProtoMessage()    {}
func (*FastForwardStream) Descriptor() ([]byte, []int) {
	return fileDescriptor_fast_forward_238e70c8a211cb9e, []int{1}
}
func (m *FastForwardStream) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FastForwardStream.Unmarshal(m, b)
}
func (m *FastForwardStream) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FastForwardStream.Marshal(b, m, deterministic)
}
func (dst *FastForwardStream) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FastForwardStream.Merge(dst, src)
}
func (m *FastForwardStream) XXX_Size() int {
	return xxx_messageInfo_FastForwardStream.Size(m)
}
func (m *FastForwardStream) XXX_DiscardUnknown() {
	xxx_messageInfo_FastForwardStream.DiscardUnknown(m)
}

var xxx_messageInfo_FastForwardStream proto.InternalMessageInfo

func (m *FastForwardStream) GetStream() []byte {
	if m != nil {
		return m.Stream
	}
	return nil
}

func init() {
	proto.RegisterType((*FastForwardInfo)(nil), "fastforward.FastForwardInfo")
	proto.RegisterType((*FastForwardStream)(nil), "fastforward.FastForwardStream")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FastForwardClient is the client API for FastForward service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FastForwardClient interface {
	GetTsStream(ctx context.Context, in *FastForwardInfo, opts ...grpc.CallOption) (FastForward_GetTsStreamClient, error)
}

type fastForwardClient struct {
	cc *grpc.ClientConn
}

func NewFastForwardClient(cc *grpc.ClientConn) FastForwardClient {
	return &fastForwardClient{cc}
}

func (c *fastForwardClient) GetTsStream(ctx context.Context, in *FastForwardInfo, opts ...grpc.CallOption) (FastForward_GetTsStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_FastForward_serviceDesc.Streams[0], "/fastforward.FastForward/GetTsStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &fastForwardGetTsStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type FastForward_GetTsStreamClient interface {
	Recv() (*FastForwardStream, error)
	grpc.ClientStream
}

type fastForwardGetTsStreamClient struct {
	grpc.ClientStream
}

func (x *fastForwardGetTsStreamClient) Recv() (*FastForwardStream, error) {
	m := new(FastForwardStream)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// FastForwardServer is the server API for FastForward service.
type FastForwardServer interface {
	GetTsStream(*FastForwardInfo, FastForward_GetTsStreamServer) error
}

func RegisterFastForwardServer(s *grpc.Server, srv FastForwardServer) {
	s.RegisterService(&_FastForward_serviceDesc, srv)
}

func _FastForward_GetTsStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(FastForwardInfo)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(FastForwardServer).GetTsStream(m, &fastForwardGetTsStreamServer{stream})
}

type FastForward_GetTsStreamServer interface {
	Send(*FastForwardStream) error
	grpc.ServerStream
}

type fastForwardGetTsStreamServer struct {
	grpc.ServerStream
}

func (x *fastForwardGetTsStreamServer) Send(m *FastForwardStream) error {
	return x.ServerStream.SendMsg(m)
}

var _FastForward_serviceDesc = grpc.ServiceDesc{
	ServiceName: "fastforward.FastForward",
	HandlerType: (*FastForwardServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetTsStream",
			Handler:       _FastForward_GetTsStream_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "fast_forward.proto",
}

func init() { proto.RegisterFile("fast_forward.proto", fileDescriptor_fast_forward_238e70c8a211cb9e) }

var fileDescriptor_fast_forward_238e70c8a211cb9e = []byte{
	// 163 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4a, 0x4b, 0x2c, 0x2e,
	0x89, 0x4f, 0xcb, 0x2f, 0x2a, 0x4f, 0x2c, 0x4a, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2,
	0x06, 0x89, 0x41, 0x85, 0x94, 0x2c, 0xb9, 0xf8, 0xdd, 0x12, 0x8b, 0x4b, 0xdc, 0x20, 0x5c, 0xcf,
	0xbc, 0xb4, 0x7c, 0x21, 0x01, 0x2e, 0xe6, 0xd2, 0xa2, 0x1c, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xce,
	0x20, 0x10, 0x53, 0x48, 0x84, 0x8b, 0xb5, 0xb8, 0x20, 0x35, 0x35, 0x45, 0x82, 0x49, 0x81, 0x51,
	0x83, 0x35, 0x08, 0xc2, 0x51, 0xd2, 0xe6, 0x12, 0x44, 0xd2, 0x1a, 0x5c, 0x52, 0x94, 0x9a, 0x98,
	0x2b, 0x24, 0xc6, 0xc5, 0x56, 0x0c, 0x66, 0x81, 0xf5, 0xf3, 0x04, 0x41, 0x79, 0x46, 0x71, 0x5c,
	0xdc, 0x48, 0x8a, 0x85, 0xfc, 0xb9, 0xb8, 0xdd, 0x53, 0x4b, 0x42, 0x8a, 0xa1, 0xba, 0x64, 0xf4,
	0x90, 0xdc, 0xa4, 0x87, 0xe6, 0x20, 0x29, 0x39, 0x5c, 0xb2, 0x10, 0xdd, 0x4a, 0x0c, 0x06, 0x8c,
	0x49, 0x6c, 0x60, 0xbf, 0x19, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x0d, 0x0f, 0x9d, 0x98, 0xf1,
	0x00, 0x00, 0x00,
}
