// Code generated by protoc-gen-go.
// source: fast_forward.proto
// DO NOT EDIT!

/*
Package fastforward is a generated protocol buffer package.

It is generated from these files:
	fast_forward.proto

It has these top-level messages:
	FastForwardInfo
	FastForwardStream
*/
package fastforward

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type FastForwardInfo struct {
	Baseurl string `protobuf:"bytes,1,opt,name=baseurl" json:"baseurl,omitempty"`
	From    int64  `protobuf:"varint,2,opt,name=from" json:"from,omitempty"`
	To      int64  `protobuf:"varint,3,opt,name=to" json:"to,omitempty"`
	Expire  int64  `protobuf:"varint,4,opt,name=expire" json:"expire,omitempty"`
	Token   string `protobuf:"bytes,5,opt,name=token" json:"token,omitempty"`
	Speed   int32  `protobuf:"varint,6,opt,name=speed" json:"speed,omitempty"`
}

func (m *FastForwardInfo) Reset()                    { *m = FastForwardInfo{} }
func (m *FastForwardInfo) String() string            { return proto.CompactTextString(m) }
func (*FastForwardInfo) ProtoMessage()               {}
func (*FastForwardInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type FastForwardStream struct {
	Stream []byte `protobuf:"bytes,1,opt,name=stream,proto3" json:"stream,omitempty"`
}

func (m *FastForwardStream) Reset()                    { *m = FastForwardStream{} }
func (m *FastForwardStream) String() string            { return proto.CompactTextString(m) }
func (*FastForwardStream) ProtoMessage()               {}
func (*FastForwardStream) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func init() {
	proto.RegisterType((*FastForwardInfo)(nil), "fastforward.FastForwardInfo")
	proto.RegisterType((*FastForwardStream)(nil), "fastforward.FastForwardStream")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// Client API for FastForward service

type FastForwardClient interface {
	GetTsSteam(ctx context.Context, in *FastForwardInfo, opts ...grpc.CallOption) (FastForward_GetTsSteamClient, error)
}

type fastForwardClient struct {
	cc *grpc.ClientConn
}

func NewFastForwardClient(cc *grpc.ClientConn) FastForwardClient {
	return &fastForwardClient{cc}
}

func (c *fastForwardClient) GetTsSteam(ctx context.Context, in *FastForwardInfo, opts ...grpc.CallOption) (FastForward_GetTsSteamClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_FastForward_serviceDesc.Streams[0], c.cc, "/fastforward.FastForward/GetTsSteam", opts...)
	if err != nil {
		return nil, err
	}
	x := &fastForwardGetTsSteamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type FastForward_GetTsSteamClient interface {
	Recv() (*FastForwardStream, error)
	grpc.ClientStream
}

type fastForwardGetTsSteamClient struct {
	grpc.ClientStream
}

func (x *fastForwardGetTsSteamClient) Recv() (*FastForwardStream, error) {
	m := new(FastForwardStream)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for FastForward service

type FastForwardServer interface {
	GetTsSteam(*FastForwardInfo, FastForward_GetTsSteamServer) error
}

func RegisterFastForwardServer(s *grpc.Server, srv FastForwardServer) {
	s.RegisterService(&_FastForward_serviceDesc, srv)
}

func _FastForward_GetTsSteam_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(FastForwardInfo)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(FastForwardServer).GetTsSteam(m, &fastForwardGetTsSteamServer{stream})
}

type FastForward_GetTsSteamServer interface {
	Send(*FastForwardStream) error
	grpc.ServerStream
}

type fastForwardGetTsSteamServer struct {
	grpc.ServerStream
}

func (x *fastForwardGetTsSteamServer) Send(m *FastForwardStream) error {
	return x.ServerStream.SendMsg(m)
}

var _FastForward_serviceDesc = grpc.ServiceDesc{
	ServiceName: "fastforward.FastForward",
	HandlerType: (*FastForwardServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetTsSteam",
			Handler:       _FastForward_GetTsSteam_Handler,
			ServerStreams: true,
		},
	},
}

var fileDescriptor0 = []byte{
	// 224 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x90, 0xc1, 0x4a, 0xc4, 0x30,
	0x10, 0x86, 0x4d, 0x77, 0x5b, 0x71, 0x56, 0x14, 0x07, 0x91, 0x20, 0x22, 0xa5, 0xa7, 0x82, 0x50,
	0x44, 0xdf, 0x61, 0xc5, 0x8b, 0x87, 0xac, 0x57, 0x91, 0x2c, 0x3b, 0x01, 0xd1, 0x76, 0x4a, 0x32,
	0xa2, 0xef, 0xe1, 0x0b, 0x4b, 0x92, 0x0a, 0x45, 0xd8, 0xdb, 0x7c, 0x5f, 0x92, 0xc9, 0xfc, 0x03,
	0xe8, 0x6c, 0x90, 0x57, 0xc7, 0xfe, 0xcb, 0xfa, 0x5d, 0x37, 0x7a, 0x16, 0xc6, 0x55, 0x74, 0x93,
	0x6a, 0x7e, 0x14, 0x9c, 0xae, 0x6d, 0x90, 0x75, 0xe6, 0xc7, 0xc1, 0x31, 0x6a, 0x38, 0xdc, 0xda,
	0x40, 0x9f, 0xfe, 0x43, 0xab, 0x5a, 0xb5, 0x47, 0xe6, 0x0f, 0x11, 0x61, 0xe9, 0x3c, 0xf7, 0xba,
	0xa8, 0x55, 0xbb, 0x30, 0xa9, 0xc6, 0x13, 0x28, 0x84, 0xf5, 0x22, 0x99, 0x42, 0x18, 0x2f, 0xa0,
	0xa2, 0xef, 0xf1, 0xcd, 0x93, 0x5e, 0x26, 0x37, 0x11, 0x9e, 0x43, 0x29, 0xfc, 0x4e, 0x83, 0x2e,
	0x53, 0xcf, 0x0c, 0xd1, 0x86, 0x91, 0x68, 0xa7, 0xab, 0x5a, 0xb5, 0xa5, 0xc9, 0xd0, 0xdc, 0xc0,
	0xd9, 0x6c, 0xa8, 0x8d, 0x78, 0xb2, 0x7d, 0x6c, 0x1c, 0x52, 0x95, 0xa6, 0x3a, 0x36, 0x13, 0xdd,
	0xbd, 0xc0, 0x6a, 0x76, 0x19, 0x9f, 0x00, 0x1e, 0x48, 0x9e, 0xc3, 0x46, 0xe2, 0xa3, 0xab, 0x6e,
	0x96, 0xb6, 0xfb, 0x97, 0xf4, 0xf2, 0x7a, 0xdf, 0x69, 0xfe, 0xb2, 0x39, 0xb8, 0x55, 0xdb, 0x2a,
	0x6d, 0xed, 0xfe, 0x37, 0x00, 0x00, 0xff, 0xff, 0xb5, 0xdf, 0x62, 0xf8, 0x4b, 0x01, 0x00, 0x00,
}
